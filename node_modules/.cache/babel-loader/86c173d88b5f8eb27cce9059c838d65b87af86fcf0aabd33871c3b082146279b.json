{"ast":null,"code":"var _jsxFileName = \"/Users/pangho/Desktop/\\u1107\\u1162\\u1111\\u1169\\u110B\\u116D\\u11BC/Dice-game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Card from './Card';\nimport Menu from './Menu';\nimport userEvent from '@testing-library/user-event';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [dice, setDice] = useState(null);\n  const [playerTurn, setPlayerTurn] = useState('yellow');\n  const [player1TurnScores, setPlayer1TurnScore] = useState([]);\n  const [player1TotalScore, setPlayer1TotalScore] = useState(0);\n  const [player2TurnScores, setPlayer2TurnScore] = useState([]);\n  const [player2TotalScore, setPlayer2TotalScore] = useState(0);\n  let player1Dice;\n  let player2Dice;\n  let dice1Img = `yellow0${player1TurnScores.slice(player1TurnScores.length - 1)}`;\n  let dice2Img = `red0${player2TurnScores.slice(player2TurnScores.length - 1)}`;\n  console.log(test.current.value);\n  useEffect(() => {\n    rollDice();\n  }, []);\n\n  /**주사위 난수 생성 */\n  function rollDice() {\n    const newRoll = Math.floor(Math.random() * 6) + 1;\n    setDice(newRoll);\n    playerDice();\n  }\n  function playerDice() {\n    if (playerTurn === 'yellow') {\n      player1Dice = dice;\n    } else if (playerTurn === 'red') {\n      player2Dice = dice;\n    }\n  }\n  function setTotalScore(playerDice, playerTurnScores, setPlayerTurnScore, setPlayerTotalScore) {\n    const playerScore = [...playerTurnScores, playerDice];\n    setPlayerTurnScore(playerScore);\n    const totalScore = playerScore.reduce((a, b) => a + b);\n    setPlayerTotalScore(totalScore);\n  }\n  function setPlayerHistory() {\n    if (playerTurn === 'yellow') {\n      setTotalScore(dice, player1TurnScores, setPlayer1TurnScore, setPlayer1TotalScore);\n    } else {\n      setTotalScore(dice, player2TurnScores, setPlayer2TurnScore, setPlayer2TotalScore);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contents\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"logo\",\n      src: require('./image/logo.png'),\n      alt: 'logo'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Dice game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      playerDice: dice,\n      handlePlayer1Dice: setDice,\n      getDice: rollDice,\n      player: playerTurn,\n      hadleplayerdice: playerDice,\n      handlePlayer: setPlayerTurn,\n      handlePlayer1TurnScore: setPlayer1TurnScore,\n      handlePlayer1TotalScore: setPlayer1TotalScore,\n      handlePlayer2TurnScore: setPlayer2TurnScore,\n      handlePlayer2TotalScore: setPlayer2TotalScore,\n      handlePlayerHistory: setPlayerHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-info\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        name: 'Player1',\n        diceImg: dice1Img,\n        playerTurnScores: player1TurnScores,\n        playerTotalScore: player1TotalScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        name: 'Player2',\n        diceImg: dice2Img,\n        player: playerTurn,\n        playerTurnScores: player2TurnScores,\n        playerTotalScore: player2TotalScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LwGnDfU1fD7a5HpR5BQhtgY3+8Y=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Card","Menu","userEvent","jsxDEV","_jsxDEV","App","_s","dice","setDice","playerTurn","setPlayerTurn","player1TurnScores","setPlayer1TurnScore","player1TotalScore","setPlayer1TotalScore","player2TurnScores","setPlayer2TurnScore","player2TotalScore","setPlayer2TotalScore","player1Dice","player2Dice","dice1Img","slice","length","dice2Img","console","log","test","current","value","rollDice","newRoll","Math","floor","random","playerDice","setTotalScore","playerTurnScores","setPlayerTurnScore","setPlayerTotalScore","playerScore","totalScore","reduce","a","b","setPlayerHistory","className","children","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","handlePlayer1Dice","getDice","player","hadleplayerdice","handlePlayer","handlePlayer1TurnScore","handlePlayer1TotalScore","handlePlayer2TurnScore","handlePlayer2TotalScore","handlePlayerHistory","name","diceImg","playerTotalScore","_c","$RefreshReg$"],"sources":["/Users/pangho/Desktop/배포용/Dice-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect}from 'react';\nimport './App.css';\nimport Card from './Card';\nimport Menu from './Menu';\nimport userEvent from '@testing-library/user-event';\n\nexport default function App() {\n  const [dice, setDice] = useState(null);\n  const [playerTurn, setPlayerTurn] = useState('yellow');\n  const [player1TurnScores,setPlayer1TurnScore] = useState([]);\n  const [player1TotalScore, setPlayer1TotalScore] = useState(0);\n  const [player2TurnScores,setPlayer2TurnScore] = useState([]);\n  const [player2TotalScore, setPlayer2TotalScore] = useState(0);\n\n  let player1Dice;\n  let player2Dice;\n  let dice1Img = `yellow0${player1TurnScores.slice(player1TurnScores.length - 1)}`;\n  let dice2Img = `red0${player2TurnScores.slice(player2TurnScores.length - 1)}`;\n\n  console.log(test.current.value);\n\n  useEffect(() => {\n    rollDice();\n  },[]);\n\n  /**주사위 난수 생성 */\n  function rollDice () {\n    const newRoll = Math.floor(Math.random() * 6) + 1;\n\n    setDice(newRoll);\n\n    playerDice();\n  }\n\n  function playerDice () {\n      if (playerTurn === 'yellow') {\n        player1Dice = dice;\n      } else if ( playerTurn === 'red') {\n        player2Dice = dice;\n      }\n    }\n\n  function setTotalScore (\n    playerDice,\n    playerTurnScores,\n    setPlayerTurnScore,\n    setPlayerTotalScore) {\n    const playerScore = [...playerTurnScores, playerDice];\n    setPlayerTurnScore(playerScore);\n\n    const totalScore = playerScore.reduce((a, b) => a + b);\n    setPlayerTotalScore(totalScore);\n  }\n\n  function setPlayerHistory () {\n    if (playerTurn === 'yellow') {\n      setTotalScore(dice, player1TurnScores, setPlayer1TurnScore, setPlayer1TotalScore)\n    } else {\n      setTotalScore(dice, player2TurnScores, setPlayer2TurnScore, setPlayer2TotalScore)\n    }\n  }\n\n  return (\n    <div className='contents'>\n      <img className='logo' src={require('./image/logo.png')} alt={'logo'} />\n      <h3>\n        Dice game\n      </h3>\n      <Menu\n        playerDice={dice}\n        handlePlayer1Dice={setDice}\n        getDice={rollDice}\n        player={playerTurn}\n        hadleplayerdice={playerDice}\n        handlePlayer={setPlayerTurn}\n        handlePlayer1TurnScore={setPlayer1TurnScore}\n        handlePlayer1TotalScore={setPlayer1TotalScore}\n        handlePlayer2TurnScore={setPlayer2TurnScore}\n        handlePlayer2TotalScore={setPlayer2TotalScore}\n        handlePlayerHistory={setPlayerHistory}\n      />\n      <div className='player-info'>\n        <Card\n          name={'Player1'}\n          diceImg={dice1Img}\n          playerTurnScores={player1TurnScores}\n          playerTotalScore={player1TotalScore}\n        />\n        <Card\n          name={'Player2'}\n          diceImg={dice2Img}\n          player={playerTurn}\n          playerTurnScores={player2TurnScores}\n          playerTotalScore={player2TotalScore}\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}